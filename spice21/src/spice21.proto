syntax = "proto3";
package spice21;
import "mos.proto";
import "bsim4.proto";


message Resistor {
    string name = 1;
    string p = 2;
    string n = 3;
    double g = 4;
}

message Capacitor {
    string name = 1;
    string p = 2;
    string n = 3;
    double c = 4;
}

message Isrc {
    string name = 1;
    string p = 2;
    string n = 3;
    double dc = 4;
}

message Vsrc {
    string name = 1;
    string p = 2;
    string n = 3;
    double dc = 4;
    double acm = 5;
}

message DiodeModel {
    string name = 1;
    double tnom = 2;
    double is = 3;
    double n = 4;
    double tt = 5;
    double vj = 6;
    double m = 7;
    double eg = 8;
    double xti = 9;
    double kf = 10;
    double af = 11;
    double fc = 12;
    double bv = 13;
    double ibv = 14;
    double rs = 15;
    double cj0 = 16;
}
// Diode Instance 
message Diode {
    string name = 1;
    string p = 2;
    string n = 3;
    double area = 4;
    double temp = 5;
}
// Instance Enumeration 
// Includes variants for all simulator-defined primitives, 
// plus custom-defined Modules. 
message Instance {
    oneof comp {
        Resistor r = 1;
        Capacitor c = 2;
        Mos m = 3;
        Isrc i = 4;
        Vsrc v = 5;
        Diode d = 6;
        ModuleInstance x = 7;
    }
}
// Module Definition 
message Module {
    string name = 1; // Module Name 
    repeated string ports = 2; // Port Names 
    repeated string signals = 4; // Internal Signals
    repeated Instance comps = 5; // Component Instances
    map <string, double> params = 9; // Parameters and Default Values
}
// Module Instance
message ModuleInstance {
    string name = 1; // Instance Name
    string module = 2; // Module Name 
    map <string, string> ports = 3; // Port Connections 
    map <string, double> params = 4; // Parameter Values
}
// Definition Enum
// Includes all variants of things to define, including:
// * Module Definitions 
// * Models 
// * Instance Parameter-Sets
message Def {
    oneof defines {
        Module module = 1;
        DiodeModel diodemodel = 3;
        Bsim4Model bsim4model = 4;
        Bsim4InstParams bsim4inst = 5;
        Mos1Model mos1model = 6;
        Mos1InstParams mos1inst = 7;
    }
}
// Circuit 
// A "top-level" combination of definitions and component instances
message Circuit {
    string name = 1; // Circuit Name 
    repeated string signals = 2; // Signal Names
    repeated Def defs = 3; // Definitions 
    repeated Instance comps = 4; // Component Instances 
}

// Transient Analysis Options 
message TranOptions {
    double tstop = 1; // Stop Time 
    double tstep = 2; // Time-Step 
    map <string, double> ic = 3; // Initial Conditions. Mapping in the form of {node: value}
}
