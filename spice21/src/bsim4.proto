syntax = "proto3";
package spice21.proto.bsim4;

message DoubleValue {
    double val = 1;
}

message UInt64Value {
    uint64 val = 1;
}

enum MosType { NMOS = 0; PMOS = 1; }

message Bsim4InstParams {
        DoubleValue l = _NUMBER_; // Length
        DoubleValue w = _NUMBER_; // Width
        DoubleValue nf = _NUMBER_; // Number of fingers
        DoubleValue sa = _NUMBER_; // distance between  OD edge to poly of one side 
        DoubleValue sb = _NUMBER_; // distance between  OD edge to poly of the other side
        DoubleValue sd = _NUMBER_; // distance between neighbour fingers
        DoubleValue sca = _NUMBER_; // Integral of the first distribution function for scattered well dopant
        DoubleValue scb = _NUMBER_; // Integral of the second distribution function for scattered well dopant
        DoubleValue scc = _NUMBER_; // Integral of the third distribution function for scattered well dopant
        DoubleValue sc = _NUMBER_; // Distance to a single well edge 
        DoubleValue ad = _NUMBER_; // Drain area
        DoubleValue r#as = _NUMBER_; // Source area // Note renamed from the keyword `as`
        DoubleValue pd = _NUMBER_; // Drain perimeter
        DoubleValue ps = _NUMBER_; // Source perimeter
        DoubleValue nrd = _NUMBER_; // Number of squares in drain
        DoubleValue nrs = _NUMBER_; // Number of squares in source
        // Modal instance params
        UInt64Value min = _NUMBER_; // Minimize either D or S
        UInt64Value rgeomod = _NUMBER_; // S/D resistance and contact model selector
        // Also model parameters 
        DoubleValue rbdb = _NUMBER_; // Body resistance
        DoubleValue rbsb = _NUMBER_; // Body resistance
        DoubleValue rbpb = _NUMBER_; // Body resistance
        DoubleValue rbps = _NUMBER_; // Body resistance
        DoubleValue rbpd = _NUMBER_; // Body resistance
        DoubleValue delvto = _NUMBER_; // Zero bias threshold voltage variation
        DoubleValue xgw = _NUMBER_; // Distance from gate contact center to device edge
        DoubleValue ngcon = _NUMBER_; // Number of gate contacts
        // Modes, also model params 
        UInt64Value trnqsmod = _NUMBER_; // Transient NQS model selector
        UInt64Value acnqsmod = _NUMBER_; // AC NQS model selector
        UInt64Value rbodymod = _NUMBER_; // Distributed body R model selector
        UInt64Value rgatemod = _NUMBER_; // Gate resistance model selector
        UInt64Value geomod = _NUMBER_; // Geometry dependent parasitics model selector
}    

message Bsim4Model { 
        MosType mos_type = 1;  // NMOS or PMOS
        UInt64Value cvchargemod = _NUMBER_; // Capacitance Charge model selector
        UInt64Value capmod = _NUMBER_; // Capacitance model selector
        UInt64Value diomod = _NUMBER_; // Diode IV model selector
        UInt64Value rdsmod = _NUMBER_; // Bias-dependent S/D resistance model selector
        UInt64Value trnqsmod = _NUMBER_; // Transient NQS model selector
        UInt64Value acnqsmod = _NUMBER_; // AC NQS model selector
        UInt64Value mobmod = _NUMBER_; // Mobility model selector
        UInt64Value rbodymod = _NUMBER_; // Distributed body R model selector
        UInt64Value rgatemod = _NUMBER_; // Gate R model selector
        UInt64Value permod = _NUMBER_; // Pd and Ps model selector
        UInt64Value geomod = _NUMBER_; // Geometry dependent parasitics model selector
        UInt64Value fnoimod = _NUMBER_; // Flicker noise model selector
        UInt64Value tnoimod = _NUMBER_; // Thermal noise model selector
        UInt64Value mtrlmod = _NUMBER_; // parameter for non-silicon substrate or metal gate selector
        UInt64Value mtrlcompatmod = _NUMBER_; // New Material Mod backward compatibility selector
        UInt64Value igcmod = _NUMBER_; // Gate-to-channel Ig model selector
        UInt64Value igbmod = _NUMBER_; // Gate-to-body Ig model selector
        UInt64Value tempmod = _NUMBER_; // Temperature model selector
        UInt64Value gidlmod = _NUMBER_; // parameter for GIDL selector
        UInt64Value wpemod = _NUMBER_; //  Flag for WPE model (WPEMOD=1 to activate this model) 
        UInt64Value paramchk = _NUMBER_; // Model parameter checking selector
        UInt64Value binunit = _NUMBER_; // Bin  unit  selector

        DoubleValue version = _NUMBER_; // parameter for model version
        DoubleValue eot = _NUMBER_; // Equivalent gate oxide thickness in meters
        DoubleValue vddeot = _NUMBER_; // Voltage for extraction of Equivalent gate oxide thickness
        DoubleValue tempeot = _NUMBER_; //  Temperature for extraction of EOT
        DoubleValue leffeot = _NUMBER_; //  Effective length for extraction of EOT
        DoubleValue weffeot = _NUMBER_; // Effective width for extraction of EOT
        DoubleValue ados = _NUMBER_; // Charge centroid parameter
        DoubleValue bdos = _NUMBER_; // Charge centroid parameter
        DoubleValue toxe = _NUMBER_; // Electrical gate oxide thickness in meters
        DoubleValue toxp = _NUMBER_; // Physical gate oxide thickness in meters
        DoubleValue toxm = _NUMBER_; // Gate oxide thickness at which parameters are extracted
        DoubleValue toxref = _NUMBER_; // Target tox value
        DoubleValue dtox = _NUMBER_; // Defined as (toxe - toxp) 
        DoubleValue epsrox = _NUMBER_; // Dielectric constant of the gate oxide relative to vacuum
        DoubleValue cdsc = _NUMBER_; // Drain/Source and channel coupling capacitance
        DoubleValue cdscb = _NUMBER_; // Body-bias dependence of cdsc
        DoubleValue cdscd = _NUMBER_; // Drain-bias dependence of cdsc
        DoubleValue cit = _NUMBER_; // Interface state capacitance
        DoubleValue nfactor = _NUMBER_; // Subthreshold swing Coefficient
        DoubleValue xj = _NUMBER_; // Junction depth in meters
        DoubleValue vsat = _NUMBER_; // Saturation velocity at tnom
        DoubleValue at = _NUMBER_; // Temperature coefficient of vsat
        DoubleValue a0 = _NUMBER_; // Non-uniform depletion width effect coefficient.
        DoubleValue ags = _NUMBER_; // Gate bias  coefficient of Abulk.
        DoubleValue a1 = _NUMBER_; // Non-saturation effect coefficient
        DoubleValue a2 = _NUMBER_; // Non-saturation effect coefficient
        DoubleValue keta = _NUMBER_; // Body-bias coefficient of non-uniform depletion width effect.
        DoubleValue phig = _NUMBER_; // Work function of gate
        DoubleValue epsrgate = _NUMBER_; // Dielectric constant of gate relative to vacuum
        DoubleValue easub = _NUMBER_; // Electron affinity of substrate
        DoubleValue epsrsub = _NUMBER_; // Dielectric constant of substrate relative to vacuum
        DoubleValue ni0sub = _NUMBER_; // Intrinsic carrier concentration of substrate at 300.15K
        DoubleValue bg0sub = _NUMBER_; // Band-gap of substrate at T=0K
        DoubleValue tbgasub = _NUMBER_; // First parameter of band-gap change due to temperature
        DoubleValue tbgbsub = _NUMBER_; // Second parameter of band-gap change due to temperature
        DoubleValue nsub = _NUMBER_; // Substrate doping concentration
        DoubleValue ndep = _NUMBER_; // Channel doping concentration at the depletion edge
        DoubleValue nsd = _NUMBER_; // S/D doping concentration
        DoubleValue phin = _NUMBER_; // Adjusting parameter for surface potential due to non-uniform vertical doping
        DoubleValue ngate = _NUMBER_; // Poly-gate doping concentration
        DoubleValue gamma1 = _NUMBER_; // Vth body coefficient
        DoubleValue gamma2 = _NUMBER_; // Vth body coefficient
        DoubleValue vbx = _NUMBER_; // Vth transition body Voltage
        DoubleValue vbm = _NUMBER_; // Maximum body voltage
        DoubleValue xt = _NUMBER_; // Doping depth
        DoubleValue k1 = _NUMBER_; // Bulk effect coefficient 1
        DoubleValue kt1 = _NUMBER_; // Temperature coefficient of Vth
        DoubleValue kt1l = _NUMBER_; // Temperature coefficient of Vth
        DoubleValue kt2 = _NUMBER_; // Body-coefficient of kt1
        DoubleValue k2 = _NUMBER_; // Bulk effect coefficient 2
        DoubleValue k3 = _NUMBER_; // Narrow width effect coefficient
        DoubleValue k3b = _NUMBER_; // Body effect coefficient of k3
        DoubleValue w0 = _NUMBER_; // Narrow width effect parameter
        DoubleValue dvtp0 = _NUMBER_; // First parameter for Vth shift due to pocket
        DoubleValue dvtp1 = _NUMBER_; // Second parameter for Vth shift due to pocket
        DoubleValue dvtp2 = _NUMBER_; // 3rd parameter for Vth shift due to pocket
        DoubleValue dvtp3 = _NUMBER_; // 4th parameter for Vth shift due to pocket
        DoubleValue dvtp4 = _NUMBER_; // 5th parameter for Vth shift due to pocket
        DoubleValue dvtp5 = _NUMBER_; // 6th parameter for Vth shift due to pocket
        DoubleValue lpe0 = _NUMBER_; // Equivalent length of pocket region at zero bias
        DoubleValue lpeb = _NUMBER_; // Equivalent length of pocket region accounting for body bias
        DoubleValue dvt0 = _NUMBER_; // Short channel effect coeff. 0
        DoubleValue dvt1 = _NUMBER_; // Short channel effect coeff. 1
        DoubleValue dvt2 = _NUMBER_; // Short channel effect coeff. 2
        DoubleValue dvt0w = _NUMBER_; // Narrow Width coeff. 0
        DoubleValue dvt1w = _NUMBER_; // Narrow Width effect coeff. 1
        DoubleValue dvt2w = _NUMBER_; // Narrow Width effect coeff. 2
        DoubleValue drout = _NUMBER_; // DIBL coefficient of output resistance
        DoubleValue dsub = _NUMBER_; // DIBL coefficient in the subthreshold region
        DoubleValue vth0 = _NUMBER_; // Threshold voltage
        DoubleValue ua = _NUMBER_; // Linear gate dependence of mobility
        DoubleValue ua1 = _NUMBER_; // Temperature coefficient of ua
        DoubleValue ub = _NUMBER_; // Quadratic gate dependence of mobility
        DoubleValue ub1 = _NUMBER_; // Temperature coefficient of ub
        DoubleValue uc = _NUMBER_; // Body-bias dependence of mobility
        DoubleValue uc1 = _NUMBER_; // Temperature coefficient of uc
        DoubleValue ud = _NUMBER_; // Coulomb scattering factor of mobility
        DoubleValue ud1 = _NUMBER_; // Temperature coefficient of ud
        DoubleValue up = _NUMBER_; // Channel length linear factor of mobility
        DoubleValue lp = _NUMBER_; // Channel length exponential factor of mobility
        DoubleValue u0 = _NUMBER_; // Low-field mobility at Tnom
        DoubleValue eu = _NUMBER_; // Mobility exponent
        DoubleValue ucs = _NUMBER_; // Colombic scattering exponent
        DoubleValue ute = _NUMBER_; // Temperature coefficient of mobility
        DoubleValue ucste = _NUMBER_; // Temperature coefficient of colombic mobility
        DoubleValue voff = _NUMBER_; // Threshold voltage offset
        DoubleValue minv = _NUMBER_; // Fitting parameter for moderate inversion in Vgsteff
        DoubleValue minvcv = _NUMBER_; // Fitting parameter for moderate inversion in Vgsteffcv
        DoubleValue voffl = _NUMBER_; // Length dependence parameter for Vth offset
        DoubleValue voffcvl = _NUMBER_; // Length dependence parameter for Vth offset in CV
        DoubleValue tnom = _NUMBER_; // Parameter measurement temperature
        DoubleValue cgso = _NUMBER_; // Gate-source overlap capacitance per width
        DoubleValue cgdo = _NUMBER_; // Gate-drain overlap capacitance per width
        DoubleValue cgbo = _NUMBER_; // Gate-bulk overlap capacitance per length
        DoubleValue xpart = _NUMBER_; // Channel charge partitioning
        DoubleValue delta = _NUMBER_; // Effective Vds parameter
        DoubleValue rsh = _NUMBER_; // Source-drain sheet resistance
        DoubleValue rdsw = _NUMBER_; // Source-drain resistance per width
        DoubleValue rdswmin = _NUMBER_; // Source-drain resistance per width at high Vg
        DoubleValue rsw = _NUMBER_; // Source resistance per width
        DoubleValue rdw = _NUMBER_; // Drain resistance per width
        DoubleValue rdwmin = _NUMBER_; // Drain resistance per width at high Vg
        DoubleValue rswmin = _NUMBER_; // Source resistance per width at high Vg
        DoubleValue prwg = _NUMBER_; // Gate-bias effect on parasitic resistance 
        DoubleValue prwb = _NUMBER_; // Body-effect on parasitic resistance 
        DoubleValue prt = _NUMBER_; // Temperature coefficient of parasitic resistance 
        DoubleValue eta0 = _NUMBER_; // Subthreshold region DIBL coefficient
        DoubleValue etab = _NUMBER_; // Subthreshold region DIBL coefficient
        DoubleValue pclm = _NUMBER_; // Channel length modulation Coefficient
        DoubleValue pdiblc1 = _NUMBER_; // Drain-induced barrier lowering coefficient
        DoubleValue pdiblc2 = _NUMBER_; // Drain-induced barrier lowering coefficient
        DoubleValue pdiblcb = _NUMBER_; // Body-effect on drain-induced barrier lowering
        DoubleValue fprout = _NUMBER_; // Rout degradation coefficient for pocket devices
        DoubleValue pdits = _NUMBER_; // Coefficient for drain-induced Vth shifts
        DoubleValue pditsl = _NUMBER_; // Length dependence of drain-induced Vth shifts
        DoubleValue pditsd = _NUMBER_; // Vds dependence of drain-induced Vth shifts
        DoubleValue pscbe1 = _NUMBER_; // Substrate current body-effect coefficient
        DoubleValue pscbe2 = _NUMBER_; // Substrate current body-effect coefficient
        DoubleValue pvag = _NUMBER_; // Gate dependence of output resistance parameter
        DoubleValue jss = _NUMBER_; // Bottom source junction reverse saturation current density
        DoubleValue jsws = _NUMBER_; // Isolation edge sidewall source junction reverse saturation current density
        DoubleValue jswgs = _NUMBER_; // Gate edge source junction reverse saturation current density
        DoubleValue pbs = _NUMBER_; // Source junction built-in potential
        DoubleValue njs = _NUMBER_; // Source junction emission coefficient
        DoubleValue xtis = _NUMBER_; // Source junction current temperature exponent
        DoubleValue mjs = _NUMBER_; // Source bottom junction capacitance grading coefficient
        DoubleValue pbsws = _NUMBER_; // Source sidewall junction capacitance built in potential
        DoubleValue mjsws = _NUMBER_; // Source sidewall junction capacitance grading coefficient
        DoubleValue pbswgs = _NUMBER_; // Source (gate side) sidewall junction capacitance built in potential
        DoubleValue mjswgs = _NUMBER_; // Source (gate side) sidewall junction capacitance grading coefficient
        DoubleValue cjs = _NUMBER_; // Source bottom junction capacitance per unit area
        DoubleValue cjsws = _NUMBER_; // Source sidewall junction capacitance per unit periphery
        DoubleValue cjswgs = _NUMBER_; // Source (gate side) sidewall junction capacitance per unit width
        DoubleValue jsd = _NUMBER_; // Bottom drain junction reverse saturation current density
        DoubleValue jswd = _NUMBER_; // Isolation edge sidewall drain junction reverse saturation current density
        DoubleValue jswgd = _NUMBER_; // Gate edge drain junction reverse saturation current density
        DoubleValue pbd = _NUMBER_; // Drain junction built-in potential
        DoubleValue njd = _NUMBER_; // Drain junction emission coefficient
        DoubleValue xtid = _NUMBER_; // Drainjunction current temperature exponent
        DoubleValue mjd = _NUMBER_; // Drain bottom junction capacitance grading coefficient
        DoubleValue pbswd = _NUMBER_; // Drain sidewall junction capacitance built in potential
        DoubleValue mjswd = _NUMBER_; // Drain sidewall junction capacitance grading coefficient
        DoubleValue pbswgd = _NUMBER_; // Drain (gate side) sidewall junction capacitance built in potential
        DoubleValue mjswgd = _NUMBER_; // Drain (gate side) sidewall junction capacitance grading coefficient
        DoubleValue cjd = _NUMBER_; // Drain bottom junction capacitance per unit area
        DoubleValue cjswd = _NUMBER_; // Drain sidewall junction capacitance per unit periphery
        DoubleValue cjswgd = _NUMBER_; // Drain (gate side) sidewall junction capacitance per unit width
        DoubleValue vfbcv = _NUMBER_; // Flat Band Voltage parameter for capmod=0 only
        DoubleValue vfb = _NUMBER_; // Flat Band Voltage
        DoubleValue tpb = _NUMBER_; // Temperature coefficient of pb
        DoubleValue tcj = _NUMBER_; // Temperature coefficient of cj
        DoubleValue tpbsw = _NUMBER_; // Temperature coefficient of pbsw
        DoubleValue tcjsw = _NUMBER_; // Temperature coefficient of cjsw
        DoubleValue tpbswg = _NUMBER_; // Temperature coefficient of pbswg
        DoubleValue tcjswg = _NUMBER_; // Temperature coefficient of cjswg
        DoubleValue acde = _NUMBER_; // Exponential coefficient for finite charge thickness
        DoubleValue moin = _NUMBER_; // Coefficient for gate-bias dependent surface potential
        DoubleValue noff = _NUMBER_; // C-V turn-on/off parameter
        DoubleValue voffcv = _NUMBER_; // C-V lateral-shift parameter
        DoubleValue dmcg = _NUMBER_; // Distance of Mid-Contact to Gate edge
        DoubleValue dmci = _NUMBER_; // Distance of Mid-Contact to Isolation
        DoubleValue dmdg = _NUMBER_; // Distance of Mid-Diffusion to Gate edge
        DoubleValue dmcgt = _NUMBER_; // Distance of Mid-Contact to Gate edge in Test structures
        DoubleValue xgw = _NUMBER_; // Distance from gate contact center to device edge
        DoubleValue xgl = _NUMBER_; // Variation in Ldrawn
        DoubleValue rshg = _NUMBER_; // Gate sheet resistance
        DoubleValue ngcon = _NUMBER_; // Number of gate contacts
        DoubleValue xrcrg1 = _NUMBER_; // First fitting parameter the bias-dependent Rg
        DoubleValue xrcrg2 = _NUMBER_; // Second fitting parameter the bias-dependent Rg
        DoubleValue lambda = _NUMBER_; //  Velocity overshoot parameter
        DoubleValue vtl = _NUMBER_; //  thermal velocity
        DoubleValue lc = _NUMBER_; //  back scattering parameter
        DoubleValue xn = _NUMBER_; //  back scattering parameter
        DoubleValue vfbsdoff = _NUMBER_; // S/D flatband voltage offset
        DoubleValue tvfbsdoff = _NUMBER_; // Temperature parameter for vfbsdoff
        DoubleValue tvoff = _NUMBER_; // Temperature parameter for voff
        DoubleValue tnfactor = _NUMBER_; // Temperature parameter for nfactor 
        DoubleValue teta0 = _NUMBER_; // Temperature parameter for eta0 
        DoubleValue tvoffcv = _NUMBER_; // Temperature parameter for tvoffcv 
        DoubleValue lintnoi = _NUMBER_; // lint offset for noise calculation
        DoubleValue lint = _NUMBER_; // Length reduction parameter
        DoubleValue ll = _NUMBER_; // Length reduction parameter
        DoubleValue llc = _NUMBER_; // Length reduction parameter for CV
        DoubleValue lln = _NUMBER_; // Length reduction parameter
        DoubleValue lw = _NUMBER_; // Length reduction parameter
        DoubleValue lwc = _NUMBER_; // Length reduction parameter for CV
        DoubleValue lwn = _NUMBER_; // Length reduction parameter
        DoubleValue lwl = _NUMBER_; // Length reduction parameter
        DoubleValue lwlc = _NUMBER_; // Length reduction parameter for CV
        DoubleValue lmin = _NUMBER_; // Minimum length for the model
        DoubleValue lmax = _NUMBER_; // Maximum length for the model
        DoubleValue wr = _NUMBER_; // Width dependence of rds
        DoubleValue wint = _NUMBER_; // Width reduction parameter
        DoubleValue dwg = _NUMBER_; // Width reduction parameter
        DoubleValue dwb = _NUMBER_; // Width reduction parameter
        DoubleValue wl = _NUMBER_; // Width reduction parameter
        DoubleValue wlc = _NUMBER_; // Width reduction parameter for CV
        DoubleValue wln = _NUMBER_; // Width reduction parameter
        DoubleValue ww = _NUMBER_; // Width reduction parameter
        DoubleValue wwc = _NUMBER_; // Width reduction parameter for CV
        DoubleValue wwn = _NUMBER_; // Width reduction parameter
        DoubleValue wwl = _NUMBER_; // Width reduction parameter
        DoubleValue wwlc = _NUMBER_; // Width reduction parameter for CV
        DoubleValue wmin = _NUMBER_; // Minimum width for the model
        DoubleValue wmax = _NUMBER_; // Maximum width for the model
        DoubleValue b0 = _NUMBER_; // Abulk narrow width parameter
        DoubleValue b1 = _NUMBER_; // Abulk narrow width parameter
        DoubleValue cgsl = _NUMBER_; // New C-V model parameter
        DoubleValue cgdl = _NUMBER_; // New C-V model parameter
        DoubleValue ckappas = _NUMBER_; // S/G overlap C-V parameter 
        DoubleValue ckappad = _NUMBER_; // D/G overlap C-V parameter
        DoubleValue cf = _NUMBER_; // Fringe capacitance parameter
        DoubleValue clc = _NUMBER_; // Vdsat parameter for C-V model
        DoubleValue cle = _NUMBER_; // Vdsat parameter for C-V model
        DoubleValue dwc = _NUMBER_; // Delta W for C-V model
        DoubleValue dlc = _NUMBER_; // Delta L for C-V model
        DoubleValue xw = _NUMBER_; // W offset for channel width due to mask/etch effect
        DoubleValue xl = _NUMBER_; // L offset for channel length due to mask/etch effect
        DoubleValue dlcig = _NUMBER_; // Delta L for Ig model
        DoubleValue dlcigd = _NUMBER_; // Delta L for Ig model drain side
        DoubleValue dwj = _NUMBER_; // Delta W for S/D junctions
        DoubleValue alpha0 = _NUMBER_; // substrate current model parameter
        DoubleValue alpha1 = _NUMBER_; // substrate current model parameter
        DoubleValue beta0 = _NUMBER_; // substrate current model parameter
        DoubleValue agidl = _NUMBER_; // Pre-exponential constant for GIDL
        DoubleValue bgidl = _NUMBER_; // Exponential constant for GIDL
        DoubleValue cgidl = _NUMBER_; // Parameter for body-bias dependence of GIDL
        DoubleValue rgidl = _NUMBER_; // GIDL vg parameter
        DoubleValue kgidl = _NUMBER_; // GIDL vb parameter
        DoubleValue fgidl = _NUMBER_; // GIDL vb parameter
        DoubleValue egidl = _NUMBER_; // Fitting parameter for Bandbending
        DoubleValue agisl = _NUMBER_; // Pre-exponential constant for GISL
        DoubleValue bgisl = _NUMBER_; // Exponential constant for GISL
        DoubleValue cgisl = _NUMBER_; // Parameter for body-bias dependence of GISL
        DoubleValue rgisl = _NUMBER_; // GISL vg parameter
        DoubleValue kgisl = _NUMBER_; // GISL vb parameter
        DoubleValue fgisl = _NUMBER_; // GISL vb parameter
        DoubleValue egisl = _NUMBER_; // Fitting parameter for Bandbending
        DoubleValue aigc = _NUMBER_; // Parameter for Igc
        DoubleValue bigc = _NUMBER_; // Parameter for Igc
        DoubleValue cigc = _NUMBER_; // Parameter for Igc
        DoubleValue aigsd = _NUMBER_; // Parameter for Igs,d
        DoubleValue bigsd = _NUMBER_; // Parameter for Igs,d
        DoubleValue cigsd = _NUMBER_; // Parameter for Igs,d
        DoubleValue aigs = _NUMBER_; // Parameter for Igs
        DoubleValue bigs = _NUMBER_; // Parameter for Igs
        DoubleValue cigs = _NUMBER_; // Parameter for Igs
        DoubleValue aigd = _NUMBER_; // Parameter for Igd
        DoubleValue bigd = _NUMBER_; // Parameter for Igd
        DoubleValue cigd = _NUMBER_; // Parameter for Igd
        DoubleValue aigbacc = _NUMBER_; // Parameter for Igb
        DoubleValue bigbacc = _NUMBER_; // Parameter for Igb
        DoubleValue cigbacc = _NUMBER_; // Parameter for Igb
        DoubleValue aigbinv = _NUMBER_; // Parameter for Igb
        DoubleValue bigbinv = _NUMBER_; // Parameter for Igb
        DoubleValue cigbinv = _NUMBER_; // Parameter for Igb
        DoubleValue nigc = _NUMBER_; // Parameter for Igc slope
        DoubleValue nigbinv = _NUMBER_; // Parameter for Igbinv slope
        DoubleValue nigbacc = _NUMBER_; // Parameter for Igbacc slope
        DoubleValue ntox = _NUMBER_; // Exponent for Tox ratio
        DoubleValue eigbinv = _NUMBER_; // Parameter for the Si bandgap for Igbinv
        DoubleValue pigcd = _NUMBER_; // Parameter for Igc partition
        DoubleValue poxedge = _NUMBER_; // Factor for the gate edge Tox
        DoubleValue ijthdfwd = _NUMBER_; // Forward drain diode forward limiting current
        DoubleValue ijthsfwd = _NUMBER_; // Forward source diode forward limiting current
        DoubleValue ijthdrev = _NUMBER_; // Reverse drain diode forward limiting current
        DoubleValue ijthsrev = _NUMBER_; // Reverse source diode forward limiting current
        DoubleValue xjbvd = _NUMBER_; // Fitting parameter for drain diode breakdown current
        DoubleValue xjbvs = _NUMBER_; // Fitting parameter for source diode breakdown current
        DoubleValue bvd = _NUMBER_; // Drain diode breakdown voltage
        DoubleValue bvs = _NUMBER_; // Source diode breakdown voltage
        DoubleValue jtss = _NUMBER_; // Source bottom trap-assisted saturation current density
        DoubleValue jtsd = _NUMBER_; // Drain bottom trap-assisted saturation current density
        DoubleValue jtssws = _NUMBER_; // Source STI sidewall trap-assisted saturation current density
        DoubleValue jtsswd = _NUMBER_; // Drain STI sidewall trap-assisted saturation current density
        DoubleValue jtsswgs = _NUMBER_; // Source gate-edge sidewall trap-assisted saturation current density
        DoubleValue jtsswgd = _NUMBER_; // Drain gate-edge sidewall trap-assisted saturation current density
        DoubleValue jtweff = _NUMBER_; // TAT current width dependance
        DoubleValue njts = _NUMBER_; // Non-ideality factor for bottom junction
        DoubleValue njtssw = _NUMBER_; // Non-ideality factor for STI sidewall junction
        DoubleValue njtsswg = _NUMBER_; // Non-ideality factor for gate-edge sidewall junction
        DoubleValue njtsd = _NUMBER_; // Non-ideality factor for bottom junction drain side
        DoubleValue njtsswd = _NUMBER_; // Non-ideality factor for STI sidewall junction drain side
        DoubleValue njtsswgd = _NUMBER_; // Non-ideality factor for gate-edge sidewall junction drain side
        DoubleValue xtss = _NUMBER_; // Power dependence of JTSS on temperature
        DoubleValue xtsd = _NUMBER_; // Power dependence of JTSD on temperature
        DoubleValue xtssws = _NUMBER_; // Power dependence of JTSSWS on temperature
        DoubleValue xtsswd = _NUMBER_; // Power dependence of JTSSWD on temperature
        DoubleValue xtsswgs = _NUMBER_; // Power dependence of JTSSWGS on temperature
        DoubleValue xtsswgd = _NUMBER_; // Power dependence of JTSSWGD on temperature
        DoubleValue tnjts = _NUMBER_; // Temperature coefficient for NJTS
        DoubleValue tnjtssw = _NUMBER_; // Temperature coefficient for NJTSSW
        DoubleValue tnjtsswg = _NUMBER_; // Temperature coefficient for NJTSSWG
        DoubleValue tnjtsd = _NUMBER_; // Temperature coefficient for NJTSD
        DoubleValue tnjtsswd = _NUMBER_; // Temperature coefficient for NJTSSWD
        DoubleValue tnjtsswgd = _NUMBER_; // Temperature coefficient for NJTSSWGD
        DoubleValue vtss = _NUMBER_; // Source bottom trap-assisted voltage dependent parameter
        DoubleValue vtsd = _NUMBER_; // Drain bottom trap-assisted voltage dependent parameter
        DoubleValue vtssws = _NUMBER_; // Source STI sidewall trap-assisted voltage dependent parameter
        DoubleValue vtsswd = _NUMBER_; // Drain STI sidewall trap-assisted voltage dependent parameter
        DoubleValue vtsswgs = _NUMBER_; // Source gate-edge sidewall trap-assisted voltage dependent parameter
        DoubleValue vtsswgd = _NUMBER_; // Drain gate-edge sidewall trap-assisted voltage dependent parameter
        DoubleValue gbmin = _NUMBER_; // Minimum body conductance
        DoubleValue rbdb = _NUMBER_; // Resistance between bNode and dbNode
        DoubleValue rbpb = _NUMBER_; // Resistance between bNodePrime and bNode
        DoubleValue rbsb = _NUMBER_; // Resistance between bNode and sbNode
        DoubleValue rbps = _NUMBER_; // Resistance between bNodePrime and sbNode
        DoubleValue rbpd = _NUMBER_; // Resistance between bNodePrime and bNode
        DoubleValue rbps0 = _NUMBER_; // Body resistance RBPS scaling
        DoubleValue rbpsl = _NUMBER_; // Body resistance RBPS L scaling
        DoubleValue rbpsw = _NUMBER_; // Body resistance RBPS W scaling
        DoubleValue rbpsnf = _NUMBER_; // Body resistance RBPS NF scaling
        DoubleValue rbpd0 = _NUMBER_; // Body resistance RBPD scaling
        DoubleValue rbpdl = _NUMBER_; // Body resistance RBPD L scaling
        DoubleValue rbpdw = _NUMBER_; // Body resistance RBPD W scaling
        DoubleValue rbpdnf = _NUMBER_; // Body resistance RBPD NF scaling
        DoubleValue rbpbx0 = _NUMBER_; // Body resistance RBPBX  scaling
        DoubleValue rbpbxl = _NUMBER_; // Body resistance RBPBX L scaling
        DoubleValue rbpbxw = _NUMBER_; // Body resistance RBPBX W scaling
        DoubleValue rbpbxnf = _NUMBER_; // Body resistance RBPBX NF scaling
        DoubleValue rbpby0 = _NUMBER_; // Body resistance RBPBY  scaling
        DoubleValue rbpbyl = _NUMBER_; // Body resistance RBPBY L scaling
        DoubleValue rbpbyw = _NUMBER_; // Body resistance RBPBY W scaling
        DoubleValue rbpbynf = _NUMBER_; // Body resistance RBPBY NF scaling
        DoubleValue rbsbx0 = _NUMBER_; // Body resistance RBSBX  scaling
        DoubleValue rbsby0 = _NUMBER_; // Body resistance RBSBY  scaling
        DoubleValue rbdbx0 = _NUMBER_; // Body resistance RBDBX  scaling
        DoubleValue rbdby0 = _NUMBER_; // Body resistance RBDBY  scaling
        DoubleValue rbsdbxl = _NUMBER_; // Body resistance RBSDBX L scaling
        DoubleValue rbsdbxw = _NUMBER_; // Body resistance RBSDBX W scaling
        DoubleValue rbsdbxnf = _NUMBER_; // Body resistance RBSDBX NF scaling
        DoubleValue rbsdbyl = _NUMBER_; // Body resistance RBSDBY L scaling
        DoubleValue rbsdbyw = _NUMBER_; // Body resistance RBSDBY W scaling
        DoubleValue rbsdbynf = _NUMBER_; // Body resistance RBSDBY NF scaling
        DoubleValue lcdsc = _NUMBER_; // Length dependence of cdsc
        DoubleValue lcdscb = _NUMBER_; // Length dependence of cdscb
        DoubleValue lcdscd = _NUMBER_; // Length dependence of cdscd
        DoubleValue lcit = _NUMBER_; // Length dependence of cit
        DoubleValue lnfactor = _NUMBER_; // Length dependence of nfactor
        DoubleValue lxj = _NUMBER_; // Length dependence of xj
        DoubleValue lvsat = _NUMBER_; // Length dependence of vsat
        DoubleValue lat = _NUMBER_; // Length dependence of at
        DoubleValue la0 = _NUMBER_; // Length dependence of a0
        DoubleValue lags = _NUMBER_; // Length dependence of ags
        DoubleValue la1 = _NUMBER_; // Length dependence of a1
        DoubleValue la2 = _NUMBER_; // Length dependence of a2
        DoubleValue lketa = _NUMBER_; // Length dependence of keta
        DoubleValue lnsub = _NUMBER_; // Length dependence of nsub
        DoubleValue lndep = _NUMBER_; // Length dependence of ndep
        DoubleValue lnsd = _NUMBER_; // Length dependence of nsd
        DoubleValue lphin = _NUMBER_; // Length dependence of phin
        DoubleValue lngate = _NUMBER_; // Length dependence of ngate
        DoubleValue lgamma1 = _NUMBER_; // Length dependence of gamma1
        DoubleValue lgamma2 = _NUMBER_; // Length dependence of gamma2
        DoubleValue lvbx = _NUMBER_; // Length dependence of vbx
        DoubleValue lvbm = _NUMBER_; // Length dependence of vbm
        DoubleValue lxt = _NUMBER_; // Length dependence of xt
        DoubleValue lk1 = _NUMBER_; // Length dependence of k1
        DoubleValue lkt1 = _NUMBER_; // Length dependence of kt1
        DoubleValue lkt1l = _NUMBER_; // Length dependence of kt1l
        DoubleValue lkt2 = _NUMBER_; // Length dependence of kt2
        DoubleValue lk2 = _NUMBER_; // Length dependence of k2
        DoubleValue lk3 = _NUMBER_; // Length dependence of k3
        DoubleValue lk3b = _NUMBER_; // Length dependence of k3b
        DoubleValue lw0 = _NUMBER_; // Length dependence of w0
        DoubleValue ldvtp0 = _NUMBER_; // Length dependence of dvtp0
        DoubleValue ldvtp1 = _NUMBER_; // Length dependence of dvtp1
        DoubleValue ldvtp2 = _NUMBER_; // Length dependence of dvtp2
        DoubleValue ldvtp3 = _NUMBER_; // Length dependence of dvtp3
        DoubleValue ldvtp4 = _NUMBER_; // Length dependence of dvtp4
        DoubleValue ldvtp5 = _NUMBER_; // Length dependence of dvtp5
        DoubleValue llpe0 = _NUMBER_; // Length dependence of lpe0
        DoubleValue llpeb = _NUMBER_; // Length dependence of lpeb
        DoubleValue ldvt0 = _NUMBER_; // Length dependence of dvt0
        DoubleValue ldvt1 = _NUMBER_; // Length dependence of dvt1
        DoubleValue ldvt2 = _NUMBER_; // Length dependence of dvt2
        DoubleValue ldvt0w = _NUMBER_; // Length dependence of dvt0w
        DoubleValue ldvt1w = _NUMBER_; // Length dependence of dvt1w
        DoubleValue ldvt2w = _NUMBER_; // Length dependence of dvt2w
        DoubleValue ldrout = _NUMBER_; // Length dependence of drout
        DoubleValue ldsub = _NUMBER_; // Length dependence of dsub
        DoubleValue lvth0 = _NUMBER_; // Length dependence of vto
        DoubleValue lua = _NUMBER_; // Length dependence of ua
        DoubleValue lua1 = _NUMBER_; // Length dependence of ua1
        DoubleValue lub = _NUMBER_; // Length dependence of ub
        DoubleValue lub1 = _NUMBER_; // Length dependence of ub1
        DoubleValue luc = _NUMBER_; // Length dependence of uc
        DoubleValue luc1 = _NUMBER_; // Length dependence of uc1
        DoubleValue lud = _NUMBER_; // Length dependence of ud
        DoubleValue lud1 = _NUMBER_; // Length dependence of ud1
        DoubleValue lup = _NUMBER_; // Length dependence of up
        DoubleValue llp = _NUMBER_; // Length dependence of lp
        DoubleValue lu0 = _NUMBER_; // Length dependence of u0
        DoubleValue lute = _NUMBER_; // Length dependence of ute
        DoubleValue lucste = _NUMBER_; // Length dependence of ucste
        DoubleValue lvoff = _NUMBER_; // Length dependence of voff
        DoubleValue lminv = _NUMBER_; // Length dependence of minv
        DoubleValue lminvcv = _NUMBER_; // Length dependence of minvcv
        DoubleValue ldelta = _NUMBER_; // Length dependence of delta
        DoubleValue lrdsw = _NUMBER_; // Length dependence of rdsw 
        DoubleValue lrsw = _NUMBER_; // Length dependence of rsw
        DoubleValue lrdw = _NUMBER_; // Length dependence of rdw
        DoubleValue lprwg = _NUMBER_; // Length dependence of prwg 
        DoubleValue lprwb = _NUMBER_; // Length dependence of prwb 
        DoubleValue lprt = _NUMBER_; // Length dependence of prt 
        DoubleValue leta0 = _NUMBER_; // Length dependence of eta0
        DoubleValue letab = _NUMBER_; // Length dependence of etab
        DoubleValue lpclm = _NUMBER_; // Length dependence of pclm
        DoubleValue lpdiblc1 = _NUMBER_; // Length dependence of pdiblc1
        DoubleValue lpdiblc2 = _NUMBER_; // Length dependence of pdiblc2
        DoubleValue lpdiblcb = _NUMBER_; // Length dependence of pdiblcb
        DoubleValue lfprout = _NUMBER_; // Length dependence of pdiblcb
        DoubleValue lpdits = _NUMBER_; // Length dependence of pdits
        DoubleValue lpditsd = _NUMBER_; // Length dependence of pditsd
        DoubleValue lpscbe1 = _NUMBER_; // Length dependence of pscbe1
        DoubleValue lpscbe2 = _NUMBER_; // Length dependence of pscbe2
        DoubleValue lpvag = _NUMBER_; // Length dependence of pvag
        DoubleValue lwr = _NUMBER_; // Length dependence of wr
        DoubleValue ldwg = _NUMBER_; // Length dependence of dwg
        DoubleValue ldwb = _NUMBER_; // Length dependence of dwb
        DoubleValue lb0 = _NUMBER_; // Length dependence of b0
        DoubleValue lb1 = _NUMBER_; // Length dependence of b1
        DoubleValue lcgsl = _NUMBER_; // Length dependence of cgsl
        DoubleValue lcgdl = _NUMBER_; // Length dependence of cgdl
        DoubleValue lckappas = _NUMBER_; // Length dependence of ckappas
        DoubleValue lckappad = _NUMBER_; // Length dependence of ckappad
        DoubleValue lcf = _NUMBER_; // Length dependence of cf
        DoubleValue lclc = _NUMBER_; // Length dependence of clc
        DoubleValue lcle = _NUMBER_; // Length dependence of cle
        DoubleValue lalpha0 = _NUMBER_; // Length dependence of alpha0
        DoubleValue lalpha1 = _NUMBER_; // Length dependence of alpha1
        DoubleValue lbeta0 = _NUMBER_; // Length dependence of beta0
        DoubleValue lagidl = _NUMBER_; // Length dependence of agidl
        DoubleValue lbgidl = _NUMBER_; // Length dependence of bgidl
        DoubleValue lcgidl = _NUMBER_; // Length dependence of cgidl
        DoubleValue lrgidl = _NUMBER_; // Length dependence of rgidl
        DoubleValue lkgidl = _NUMBER_; // Length dependence of kgidl
        DoubleValue lfgidl = _NUMBER_; // Length dependence of fgidl
        DoubleValue legidl = _NUMBER_; // Length dependence of egidl
        DoubleValue lagisl = _NUMBER_; // Length dependence of agisl
        DoubleValue lbgisl = _NUMBER_; // Length dependence of bgisl
        DoubleValue lcgisl = _NUMBER_; // Length dependence of cgisl
        DoubleValue lrgisl = _NUMBER_; // Length dependence of rgisl
        DoubleValue lkgisl = _NUMBER_; // Length dependence of kgisl
        DoubleValue lfgisl = _NUMBER_; // Length dependence of fgisl
        DoubleValue legisl = _NUMBER_; // Length dependence of egisl
        DoubleValue laigc = _NUMBER_; // Length dependence of aigc
        DoubleValue lbigc = _NUMBER_; // Length dependence of bigc
        DoubleValue lcigc = _NUMBER_; // Length dependence of cigc
        DoubleValue laigsd = _NUMBER_; // Length dependence of aigsd
        DoubleValue lbigsd = _NUMBER_; // Length dependence of bigsd
        DoubleValue lcigsd = _NUMBER_; // Length dependence of cigsd
        DoubleValue laigs = _NUMBER_; // Length dependence of aigs
        DoubleValue lbigs = _NUMBER_; // Length dependence of bigs
        DoubleValue lcigs = _NUMBER_; // Length dependence of cigs
        DoubleValue laigd = _NUMBER_; // Length dependence of aigd
        DoubleValue lbigd = _NUMBER_; // Length dependence of bigd
        DoubleValue lcigd = _NUMBER_; // Length dependence of cigd
        DoubleValue laigbacc = _NUMBER_; // Length dependence of aigbacc
        DoubleValue lbigbacc = _NUMBER_; // Length dependence of bigbacc
        DoubleValue lcigbacc = _NUMBER_; // Length dependence of cigbacc
        DoubleValue laigbinv = _NUMBER_; // Length dependence of aigbinv
        DoubleValue lbigbinv = _NUMBER_; // Length dependence of bigbinv
        DoubleValue lcigbinv = _NUMBER_; // Length dependence of cigbinv
        DoubleValue lnigc = _NUMBER_; // Length dependence of nigc
        DoubleValue lnigbinv = _NUMBER_; // Length dependence of nigbinv
        DoubleValue lnigbacc = _NUMBER_; // Length dependence of nigbacc
        DoubleValue lntox = _NUMBER_; // Length dependence of ntox
        DoubleValue leigbinv = _NUMBER_; // Length dependence for eigbinv
        DoubleValue lpigcd = _NUMBER_; // Length dependence for pigcd
        DoubleValue lpoxedge = _NUMBER_; // Length dependence for poxedge
        DoubleValue lvfbcv = _NUMBER_; // Length dependence of vfbcv
        DoubleValue lvfb = _NUMBER_; // Length dependence of vfb
        DoubleValue lacde = _NUMBER_; // Length dependence of acde
        DoubleValue lmoin = _NUMBER_; // Length dependence of moin
        DoubleValue lnoff = _NUMBER_; // Length dependence of noff
        DoubleValue lvoffcv = _NUMBER_; // Length dependence of voffcv
        DoubleValue lxrcrg1 = _NUMBER_; // Length dependence of xrcrg1
        DoubleValue lxrcrg2 = _NUMBER_; // Length dependence of xrcrg2
        DoubleValue llambda = _NUMBER_; // Length dependence of lambda
        DoubleValue lvtl = _NUMBER_; //  Length dependence of vtl
        DoubleValue lxn = _NUMBER_; //  Length dependence of xn
        DoubleValue leu = _NUMBER_; //  Length dependence of eu
        DoubleValue lucs = _NUMBER_; // Length dependence of lucs
        DoubleValue lvfbsdoff = _NUMBER_; // Length dependence of vfbsdoff
        DoubleValue ltvfbsdoff = _NUMBER_; // Length dependence of tvfbsdoff
        DoubleValue ltvoff = _NUMBER_; // Length dependence of tvoff
        DoubleValue ltnfactor = _NUMBER_; // Length dependence of tnfactor 
        DoubleValue lteta0 = _NUMBER_; // Length dependence of teta0 
        DoubleValue ltvoffcv = _NUMBER_; // Length dependence of tvoffcv 
        DoubleValue wcdsc = _NUMBER_; // Width dependence of cdsc
        DoubleValue wcdscb = _NUMBER_; // Width dependence of cdscb
        DoubleValue wcdscd = _NUMBER_; // Width dependence of cdscd
        DoubleValue wcit = _NUMBER_; // Width dependence of cit
        DoubleValue wnfactor = _NUMBER_; // Width dependence of nfactor
        DoubleValue wxj = _NUMBER_; // Width dependence of xj
        DoubleValue wvsat = _NUMBER_; // Width dependence of vsat
        DoubleValue wat = _NUMBER_; // Width dependence of at
        DoubleValue wa0 = _NUMBER_; // Width dependence of a0
        DoubleValue wags = _NUMBER_; // Width dependence of ags
        DoubleValue wa1 = _NUMBER_; // Width dependence of a1
        DoubleValue wa2 = _NUMBER_; // Width dependence of a2
        DoubleValue wketa = _NUMBER_; // Width dependence of keta
        DoubleValue wnsub = _NUMBER_; // Width dependence of nsub
        DoubleValue wndep = _NUMBER_; // Width dependence of ndep
        DoubleValue wnsd = _NUMBER_; // Width dependence of nsd
        DoubleValue wphin = _NUMBER_; // Width dependence of phin
        DoubleValue wngate = _NUMBER_; // Width dependence of ngate
        DoubleValue wgamma1 = _NUMBER_; // Width dependence of gamma1
        DoubleValue wgamma2 = _NUMBER_; // Width dependence of gamma2
        DoubleValue wvbx = _NUMBER_; // Width dependence of vbx
        DoubleValue wvbm = _NUMBER_; // Width dependence of vbm
        DoubleValue wxt = _NUMBER_; // Width dependence of xt
        DoubleValue wk1 = _NUMBER_; // Width dependence of k1
        DoubleValue wkt1 = _NUMBER_; // Width dependence of kt1
        DoubleValue wkt1l = _NUMBER_; // Width dependence of kt1l
        DoubleValue wkt2 = _NUMBER_; // Width dependence of kt2
        DoubleValue wk2 = _NUMBER_; // Width dependence of k2
        DoubleValue wk3 = _NUMBER_; // Width dependence of k3
        DoubleValue wk3b = _NUMBER_; // Width dependence of k3b
        DoubleValue ww0 = _NUMBER_; // Width dependence of w0
        DoubleValue wdvtp0 = _NUMBER_; // Width dependence of dvtp0
        DoubleValue wdvtp1 = _NUMBER_; // Width dependence of dvtp1
        DoubleValue wdvtp2 = _NUMBER_; // Width dependence of dvtp2
        DoubleValue wdvtp3 = _NUMBER_; // Width dependence of dvtp3
        DoubleValue wdvtp4 = _NUMBER_; // Width dependence of dvtp4
        DoubleValue wdvtp5 = _NUMBER_; // Width dependence of dvtp5
        DoubleValue wlpe0 = _NUMBER_; // Width dependence of lpe0
        DoubleValue wlpeb = _NUMBER_; // Width dependence of lpeb
        DoubleValue wdvt0 = _NUMBER_; // Width dependence of dvt0
        DoubleValue wdvt1 = _NUMBER_; // Width dependence of dvt1
        DoubleValue wdvt2 = _NUMBER_; // Width dependence of dvt2
        DoubleValue wdvt0w = _NUMBER_; // Width dependence of dvt0w
        DoubleValue wdvt1w = _NUMBER_; // Width dependence of dvt1w
        DoubleValue wdvt2w = _NUMBER_; // Width dependence of dvt2w
        DoubleValue wdrout = _NUMBER_; // Width dependence of drout
        DoubleValue wdsub = _NUMBER_; // Width dependence of dsub
        DoubleValue wvth0 = _NUMBER_; // Width dependence of vto
        DoubleValue wua = _NUMBER_; // Width dependence of ua
        DoubleValue wua1 = _NUMBER_; // Width dependence of ua1
        DoubleValue wub = _NUMBER_; // Width dependence of ub
        DoubleValue wub1 = _NUMBER_; // Width dependence of ub1
        DoubleValue wuc = _NUMBER_; // Width dependence of uc
        DoubleValue wuc1 = _NUMBER_; // Width dependence of uc1
        DoubleValue wud = _NUMBER_; // Width dependence of ud
        DoubleValue wud1 = _NUMBER_; // Width dependence of ud1
        DoubleValue wup = _NUMBER_; // Width dependence of up
        DoubleValue wlp = _NUMBER_; // Width dependence of lp
        DoubleValue wu0 = _NUMBER_; // Width dependence of u0
        DoubleValue wute = _NUMBER_; // Width dependence of ute
        DoubleValue wucste = _NUMBER_; // Width dependence of ucste
        DoubleValue wvoff = _NUMBER_; // Width dependence of voff
        DoubleValue wminv = _NUMBER_; // Width dependence of minv
        DoubleValue wminvcv = _NUMBER_; // Width dependence of minvcv
        DoubleValue wdelta = _NUMBER_; // Width dependence of delta
        DoubleValue wrdsw = _NUMBER_; // Width dependence of rdsw 
        DoubleValue wrsw = _NUMBER_; // Width dependence of rsw
        DoubleValue wrdw = _NUMBER_; // Width dependence of rdw
        DoubleValue wprwg = _NUMBER_; // Width dependence of prwg 
        DoubleValue wprwb = _NUMBER_; // Width dependence of prwb 
        DoubleValue wprt = _NUMBER_; // Width dependence of prt
        DoubleValue weta0 = _NUMBER_; // Width dependence of eta0
        DoubleValue wetab = _NUMBER_; // Width dependence of etab
        DoubleValue wpclm = _NUMBER_; // Width dependence of pclm
        DoubleValue wpdiblc1 = _NUMBER_; // Width dependence of pdiblc1
        DoubleValue wpdiblc2 = _NUMBER_; // Width dependence of pdiblc2
        DoubleValue wpdiblcb = _NUMBER_; // Width dependence of pdiblcb
        DoubleValue wfprout = _NUMBER_; // Width dependence of pdiblcb
        DoubleValue wpdits = _NUMBER_; // Width dependence of pdits
        DoubleValue wpditsd = _NUMBER_; // Width dependence of pditsd
        DoubleValue wpscbe1 = _NUMBER_; // Width dependence of pscbe1
        DoubleValue wpscbe2 = _NUMBER_; // Width dependence of pscbe2
        DoubleValue wpvag = _NUMBER_; // Width dependence of pvag
        DoubleValue wwr = _NUMBER_; // Width dependence of wr
        DoubleValue wdwg = _NUMBER_; // Width dependence of dwg
        DoubleValue wdwb = _NUMBER_; // Width dependence of dwb
        DoubleValue wb0 = _NUMBER_; // Width dependence of b0
        DoubleValue wb1 = _NUMBER_; // Width dependence of b1
        DoubleValue wcgsl = _NUMBER_; // Width dependence of cgsl
        DoubleValue wcgdl = _NUMBER_; // Width dependence of cgdl
        DoubleValue wckappas = _NUMBER_; // Width dependence of ckappas
        DoubleValue wckappad = _NUMBER_; // Width dependence of ckappad
        DoubleValue wcf = _NUMBER_; // Width dependence of cf
        DoubleValue wclc = _NUMBER_; // Width dependence of clc
        DoubleValue wcle = _NUMBER_; // Width dependence of cle
        DoubleValue walpha0 = _NUMBER_; // Width dependence of alpha0
        DoubleValue walpha1 = _NUMBER_; // Width dependence of alpha1
        DoubleValue wbeta0 = _NUMBER_; // Width dependence of beta0
        DoubleValue wagidl = _NUMBER_; // Width dependence of agidl
        DoubleValue wbgidl = _NUMBER_; // Width dependence of bgidl
        DoubleValue wcgidl = _NUMBER_; // Width dependence of cgidl
        DoubleValue wrgidl = _NUMBER_; // Width dependence of rgidl
        DoubleValue wkgidl = _NUMBER_; // Width dependence of kgidl
        DoubleValue wfgidl = _NUMBER_; // Width dependence of fgidl
        DoubleValue wegidl = _NUMBER_; // Width dependence of egidl
        DoubleValue wagisl = _NUMBER_; // Width dependence of agisl
        DoubleValue wbgisl = _NUMBER_; // Width dependence of bgisl
        DoubleValue wcgisl = _NUMBER_; // Width dependence of cgisl
        DoubleValue wrgisl = _NUMBER_; // Width dependence of rgisl
        DoubleValue wkgisl = _NUMBER_; // Width dependence of kgisl
        DoubleValue wfgisl = _NUMBER_; // Width dependence of fgisl
        DoubleValue wegisl = _NUMBER_; // Width dependence of egisl
        DoubleValue waigc = _NUMBER_; // Width dependence of aigc
        DoubleValue wbigc = _NUMBER_; // Width dependence of bigc
        DoubleValue wcigc = _NUMBER_; // Width dependence of cigc
        DoubleValue waigsd = _NUMBER_; // Width dependence of aigsd
        DoubleValue wbigsd = _NUMBER_; // Width dependence of bigsd
        DoubleValue wcigsd = _NUMBER_; // Width dependence of cigsd
        DoubleValue waigs = _NUMBER_; // Width dependence of aigs
        DoubleValue wbigs = _NUMBER_; // Width dependence of bigs
        DoubleValue wcigs = _NUMBER_; // Width dependence of cigs
        DoubleValue waigd = _NUMBER_; // Width dependence of aigd
        DoubleValue wbigd = _NUMBER_; // Width dependence of bigd
        DoubleValue wcigd = _NUMBER_; // Width dependence of cigd
        DoubleValue waigbacc = _NUMBER_; // Width dependence of aigbacc
        DoubleValue wbigbacc = _NUMBER_; // Width dependence of bigbacc
        DoubleValue wcigbacc = _NUMBER_; // Width dependence of cigbacc
        DoubleValue waigbinv = _NUMBER_; // Width dependence of aigbinv
        DoubleValue wbigbinv = _NUMBER_; // Width dependence of bigbinv
        DoubleValue wcigbinv = _NUMBER_; // Width dependence of cigbinv
        DoubleValue wnigc = _NUMBER_; // Width dependence of nigc
        DoubleValue wnigbinv = _NUMBER_; // Width dependence of nigbinv
        DoubleValue wnigbacc = _NUMBER_; // Width dependence of nigbacc
        DoubleValue wntox = _NUMBER_; // Width dependence of ntox
        DoubleValue weigbinv = _NUMBER_; // Width dependence for eigbinv
        DoubleValue wpigcd = _NUMBER_; // Width dependence for pigcd
        DoubleValue wpoxedge = _NUMBER_; // Width dependence for poxedge
        DoubleValue wvfbcv = _NUMBER_; // Width dependence of vfbcv
        DoubleValue wvfb = _NUMBER_; // Width dependence of vfb
        DoubleValue wacde = _NUMBER_; // Width dependence of acde
        DoubleValue wmoin = _NUMBER_; // Width dependence of moin
        DoubleValue wnoff = _NUMBER_; // Width dependence of noff
        DoubleValue wvoffcv = _NUMBER_; // Width dependence of voffcv
        DoubleValue wxrcrg1 = _NUMBER_; // Width dependence of xrcrg1
        DoubleValue wxrcrg2 = _NUMBER_; // Width dependence of xrcrg2
        DoubleValue wlambda = _NUMBER_; // Width dependence of lambda
        DoubleValue wvtl = _NUMBER_; // Width dependence of vtl
        DoubleValue wxn = _NUMBER_; // Width dependence of xn
        DoubleValue weu = _NUMBER_; // Width dependence of eu
        DoubleValue wucs = _NUMBER_; // Width dependence of ucs
        DoubleValue wvfbsdoff = _NUMBER_; // Width dependence of vfbsdoff
        DoubleValue wtvfbsdoff = _NUMBER_; // Width dependence of tvfbsdoff
        DoubleValue wtvoff = _NUMBER_; // Width dependence of tvoff
        DoubleValue wtnfactor = _NUMBER_; // Width dependence of tnfactor 
        DoubleValue wteta0 = _NUMBER_; // Width dependence of teta0 
        DoubleValue wtvoffcv = _NUMBER_; // Width dependence of tvoffcv 
        DoubleValue pcdsc = _NUMBER_; // Cross-term dependence of cdsc
        DoubleValue pcdscb = _NUMBER_; // Cross-term dependence of cdscb
        DoubleValue pcdscd = _NUMBER_; // Cross-term dependence of cdscd
        DoubleValue pcit = _NUMBER_; // Cross-term dependence of cit
        DoubleValue pnfactor = _NUMBER_; // Cross-term dependence of nfactor
        DoubleValue pxj = _NUMBER_; // Cross-term dependence of xj
        DoubleValue pvsat = _NUMBER_; // Cross-term dependence of vsat
        DoubleValue pat = _NUMBER_; // Cross-term dependence of at
        DoubleValue pa0 = _NUMBER_; // Cross-term dependence of a0
        DoubleValue pags = _NUMBER_; // Cross-term dependence of ags
        DoubleValue pa1 = _NUMBER_; // Cross-term dependence of a1
        DoubleValue pa2 = _NUMBER_; // Cross-term dependence of a2
        DoubleValue pketa = _NUMBER_; // Cross-term dependence of keta
        DoubleValue pnsub = _NUMBER_; // Cross-term dependence of nsub
        DoubleValue pndep = _NUMBER_; // Cross-term dependence of ndep
        DoubleValue pnsd = _NUMBER_; // Cross-term dependence of nsd
        DoubleValue pphin = _NUMBER_; // Cross-term dependence of phin
        DoubleValue pngate = _NUMBER_; // Cross-term dependence of ngate
        DoubleValue pgamma1 = _NUMBER_; // Cross-term dependence of gamma1
        DoubleValue pgamma2 = _NUMBER_; // Cross-term dependence of gamma2
        DoubleValue pvbx = _NUMBER_; // Cross-term dependence of vbx
        DoubleValue pvbm = _NUMBER_; // Cross-term dependence of vbm
        DoubleValue pxt = _NUMBER_; // Cross-term dependence of xt
        DoubleValue pk1 = _NUMBER_; // Cross-term dependence of k1
        DoubleValue pkt1 = _NUMBER_; // Cross-term dependence of kt1
        DoubleValue pkt1l = _NUMBER_; // Cross-term dependence of kt1l
        DoubleValue pkt2 = _NUMBER_; // Cross-term dependence of kt2
        DoubleValue pk2 = _NUMBER_; // Cross-term dependence of k2
        DoubleValue pk3 = _NUMBER_; // Cross-term dependence of k3
        DoubleValue pk3b = _NUMBER_; // Cross-term dependence of k3b
        DoubleValue pw0 = _NUMBER_; // Cross-term dependence of w0
        DoubleValue pdvtp0 = _NUMBER_; // Cross-term dependence of dvtp0
        DoubleValue pdvtp1 = _NUMBER_; // Cross-term dependence of dvtp1
        DoubleValue pdvtp2 = _NUMBER_; // Cross-term dependence of dvtp2
        DoubleValue pdvtp3 = _NUMBER_; // Cross-term dependence of dvtp3
        DoubleValue pdvtp4 = _NUMBER_; // Cross-term dependence of dvtp4
        DoubleValue pdvtp5 = _NUMBER_; // Cross-term dependence of dvtp5
        DoubleValue plpe0 = _NUMBER_; // Cross-term dependence of lpe0
        DoubleValue plpeb = _NUMBER_; // Cross-term dependence of lpeb
        DoubleValue pdvt0 = _NUMBER_; // Cross-term dependence of dvt0
        DoubleValue pdvt1 = _NUMBER_; // Cross-term dependence of dvt1
        DoubleValue pdvt2 = _NUMBER_; // Cross-term dependence of dvt2
        DoubleValue pdvt0w = _NUMBER_; // Cross-term dependence of dvt0w
        DoubleValue pdvt1w = _NUMBER_; // Cross-term dependence of dvt1w
        DoubleValue pdvt2w = _NUMBER_; // Cross-term dependence of dvt2w
        DoubleValue pdrout = _NUMBER_; // Cross-term dependence of drout
        DoubleValue pdsub = _NUMBER_; // Cross-term dependence of dsub
        DoubleValue pvth0 = _NUMBER_; // Cross-term dependence of vto
        DoubleValue pua = _NUMBER_; // Cross-term dependence of ua
        DoubleValue pua1 = _NUMBER_; // Cross-term dependence of ua1
        DoubleValue pub = _NUMBER_; // Cross-term dependence of ub 
        DoubleValue pub1 = _NUMBER_; // Cross-term dependence of ub1
        DoubleValue puc = _NUMBER_; // Cross-term dependence of uc
        DoubleValue puc1 = _NUMBER_; // Cross-term dependence of uc1
        DoubleValue pud = _NUMBER_; // Cross-term dependence of ud
        DoubleValue pud1 = _NUMBER_; // Cross-term dependence of ud1
        DoubleValue pup = _NUMBER_; // Cross-term dependence of up
        DoubleValue plp = _NUMBER_; // Cross-term dependence of lp
        DoubleValue pu0 = _NUMBER_; // Cross-term dependence of u0
        DoubleValue pute = _NUMBER_; // Cross-term dependence of ute
        DoubleValue pucste = _NUMBER_; // Cross-term dependence of ucste
        DoubleValue pvoff = _NUMBER_; // Cross-term dependence of voff
        DoubleValue pminv = _NUMBER_; // Cross-term dependence of minv
        DoubleValue pminvcv = _NUMBER_; // Cross-term dependence of minvcv
        DoubleValue pdelta = _NUMBER_; // Cross-term dependence of delta
        DoubleValue prdsw = _NUMBER_; // Cross-term dependence of rdsw 
        DoubleValue prsw = _NUMBER_; // Cross-term dependence of rsw
        DoubleValue prdw = _NUMBER_; // Cross-term dependence of rdw
        DoubleValue pprwg = _NUMBER_; // Cross-term dependence of prwg 
        DoubleValue pprwb = _NUMBER_; // Cross-term dependence of prwb 
        DoubleValue pprt = _NUMBER_; // Cross-term dependence of prt 
        DoubleValue peta0 = _NUMBER_; // Cross-term dependence of eta0
        DoubleValue petab = _NUMBER_; // Cross-term dependence of etab
        DoubleValue ppclm = _NUMBER_; // Cross-term dependence of pclm
        DoubleValue ppdiblc1 = _NUMBER_; // Cross-term dependence of pdiblc1
        DoubleValue ppdiblc2 = _NUMBER_; // Cross-term dependence of pdiblc2
        DoubleValue ppdiblcb = _NUMBER_; // Cross-term dependence of pdiblcb
        DoubleValue pfprout = _NUMBER_; // Cross-term dependence of pdiblcb
        DoubleValue ppdits = _NUMBER_; // Cross-term dependence of pdits
        DoubleValue ppditsd = _NUMBER_; // Cross-term dependence of pditsd
        DoubleValue ppscbe1 = _NUMBER_; // Cross-term dependence of pscbe1
        DoubleValue ppscbe2 = _NUMBER_; // Cross-term dependence of pscbe2
        DoubleValue ppvag = _NUMBER_; // Cross-term dependence of pvag
        DoubleValue pwr = _NUMBER_; // Cross-term dependence of wr
        DoubleValue pdwg = _NUMBER_; // Cross-term dependence of dwg
        DoubleValue pdwb = _NUMBER_; // Cross-term dependence of dwb
        DoubleValue pb0 = _NUMBER_; // Cross-term dependence of b0
        DoubleValue pb1 = _NUMBER_; // Cross-term dependence of b1
        DoubleValue pcgsl = _NUMBER_; // Cross-term dependence of cgsl
        DoubleValue pcgdl = _NUMBER_; // Cross-term dependence of cgdl
        DoubleValue pckappas = _NUMBER_; // Cross-term dependence of ckappas
        DoubleValue pckappad = _NUMBER_; // Cross-term dependence of ckappad
        DoubleValue pcf = _NUMBER_; // Cross-term dependence of cf
        DoubleValue pclc = _NUMBER_; // Cross-term dependence of clc
        DoubleValue pcle = _NUMBER_; // Cross-term dependence of cle
        DoubleValue palpha0 = _NUMBER_; // Cross-term dependence of alpha0
        DoubleValue palpha1 = _NUMBER_; // Cross-term dependence of alpha1
        DoubleValue pbeta0 = _NUMBER_; // Cross-term dependence of beta0
        DoubleValue pagidl = _NUMBER_; // Cross-term dependence of agidl
        DoubleValue pbgidl = _NUMBER_; // Cross-term dependence of bgidl
        DoubleValue pcgidl = _NUMBER_; // Cross-term dependence of cgidl
        DoubleValue prgidl = _NUMBER_; // Cross-term dependence of rgidl
        DoubleValue pkgidl = _NUMBER_; // Cross-term dependence of kgidl
        DoubleValue pfgidl = _NUMBER_; // Cross-term dependence of fgidl
        DoubleValue pegidl = _NUMBER_; // Cross-term dependence of egidl
        DoubleValue pagisl = _NUMBER_; // Cross-term dependence of agisl
        DoubleValue pbgisl = _NUMBER_; // Cross-term dependence of bgisl
        DoubleValue pcgisl = _NUMBER_; // Cross-term dependence of cgisl
        DoubleValue pegisl = _NUMBER_; // Cross-term dependence of egisl
        DoubleValue prgisl = _NUMBER_; // Cross-term dependence of rgisl
        DoubleValue pkgisl = _NUMBER_; // Cross-term dependence of kgisl
        DoubleValue pfgisl = _NUMBER_; // Cross-term dependence of fgisl
        DoubleValue paigc = _NUMBER_; // Cross-term dependence of aigc
        DoubleValue pbigc = _NUMBER_; // Cross-term dependence of bigc
        DoubleValue pcigc = _NUMBER_; // Cross-term dependence of cigc
        DoubleValue paigsd = _NUMBER_; // Cross-term dependence of aigsd
        DoubleValue pbigsd = _NUMBER_; // Cross-term dependence of bigsd
        DoubleValue pcigsd = _NUMBER_; // Cross-term dependence of cigsd
        DoubleValue paigs = _NUMBER_; // Cross-term dependence of aigs
        DoubleValue pbigs = _NUMBER_; // Cross-term dependence of bigs
        DoubleValue pcigs = _NUMBER_; // Cross-term dependence of cigs
        DoubleValue paigd = _NUMBER_; // Cross-term dependence of aigd
        DoubleValue pbigd = _NUMBER_; // Cross-term dependence of bigd
        DoubleValue pcigd = _NUMBER_; // Cross-term dependence of cigd
        DoubleValue paigbacc = _NUMBER_; // Cross-term dependence of aigbacc
        DoubleValue pbigbacc = _NUMBER_; // Cross-term dependence of bigbacc
        DoubleValue pcigbacc = _NUMBER_; // Cross-term dependence of cigbacc
        DoubleValue paigbinv = _NUMBER_; // Cross-term dependence of aigbinv
        DoubleValue pbigbinv = _NUMBER_; // Cross-term dependence of bigbinv
        DoubleValue pcigbinv = _NUMBER_; // Cross-term dependence of cigbinv
        DoubleValue pnigc = _NUMBER_; // Cross-term dependence of nigc
        DoubleValue pnigbinv = _NUMBER_; // Cross-term dependence of nigbinv
        DoubleValue pnigbacc = _NUMBER_; // Cross-term dependence of nigbacc
        DoubleValue pntox = _NUMBER_; // Cross-term dependence of ntox
        DoubleValue peigbinv = _NUMBER_; // Cross-term dependence for eigbinv
        DoubleValue ppigcd = _NUMBER_; // Cross-term dependence for pigcd
        DoubleValue ppoxedge = _NUMBER_; // Cross-term dependence for poxedge
        DoubleValue pvfbcv = _NUMBER_; // Cross-term dependence of vfbcv
        DoubleValue pvfb = _NUMBER_; // Cross-term dependence of vfb
        DoubleValue pacde = _NUMBER_; // Cross-term dependence of acde
        DoubleValue pmoin = _NUMBER_; // Cross-term dependence of moin
        DoubleValue pnoff = _NUMBER_; // Cross-term dependence of noff
        DoubleValue pvoffcv = _NUMBER_; // Cross-term dependence of voffcv
        DoubleValue pxrcrg1 = _NUMBER_; // Cross-term dependence of xrcrg1
        DoubleValue pxrcrg2 = _NUMBER_; // Cross-term dependence of xrcrg2
        DoubleValue plambda = _NUMBER_; // Cross-term dependence of lambda
        DoubleValue pvtl = _NUMBER_; // Cross-term dependence of vtl
        DoubleValue pxn = _NUMBER_; // Cross-term dependence of xn
        DoubleValue peu = _NUMBER_; // Cross-term dependence of eu
        DoubleValue pucs = _NUMBER_; // Cross-term dependence of ucs
        DoubleValue pvfbsdoff = _NUMBER_; // Cross-term dependence of vfbsdoff
        DoubleValue ptvfbsdoff = _NUMBER_; // Cross-term dependence of tvfbsdoff
        DoubleValue ptvoff = _NUMBER_; // Cross-term dependence of tvoff
        DoubleValue ptnfactor = _NUMBER_; // Cross-term dependence of tnfactor 
        DoubleValue pteta0 = _NUMBER_; // Cross-term dependence of teta0 
        DoubleValue ptvoffcv = _NUMBER_; // Cross-term dependence of tvoffcv 
        DoubleValue saref = _NUMBER_; // Reference distance between OD edge to poly of one side
        DoubleValue sbref = _NUMBER_; // Reference distance between OD edge to poly of the other side
        DoubleValue wlod = _NUMBER_; // Width parameter for stress effect
        DoubleValue ku0 = _NUMBER_; // Mobility degradation/enhancement coefficient for LOD
        DoubleValue kvsat = _NUMBER_; // Saturation velocity degradation/enhancement parameter for LOD
        DoubleValue kvth0 = _NUMBER_; // Threshold degradation/enhancement parameter for LOD
        DoubleValue tku0 = _NUMBER_; // Temperature coefficient of KU0
        DoubleValue llodku0 = _NUMBER_; // Length parameter for u0 LOD effect
        DoubleValue wlodku0 = _NUMBER_; // Width parameter for u0 LOD effect
        DoubleValue llodvth = _NUMBER_; // Length parameter for vth LOD effect
        DoubleValue wlodvth = _NUMBER_; // Width parameter for vth LOD effect
        DoubleValue lku0 = _NUMBER_; // Length dependence of ku0
        DoubleValue wku0 = _NUMBER_; // Width dependence of ku0
        DoubleValue pku0 = _NUMBER_; // Cross-term dependence of ku0
        DoubleValue lkvth0 = _NUMBER_; // Length dependence of kvth0
        DoubleValue wkvth0 = _NUMBER_; // Width dependence of kvth0
        DoubleValue pkvth0 = _NUMBER_; // Cross-term dependence of kvth0
        DoubleValue stk2 = _NUMBER_; // K2 shift factor related to stress effect on vth
        DoubleValue lodk2 = _NUMBER_; // K2 shift modification factor for stress effect
        DoubleValue steta0 = _NUMBER_; // eta0 shift factor related to stress effect on vth
        DoubleValue lodeta0 = _NUMBER_; // eta0 shift modification factor for stress effect
        DoubleValue web = _NUMBER_; // Coefficient for SCB
        DoubleValue wec = _NUMBER_; // Coefficient for SCC
        DoubleValue kvth0we = _NUMBER_; // Threshold shift factor for well proximity effect
        DoubleValue k2we = _NUMBER_; //  K2 shift factor for well proximity effect 
        DoubleValue ku0we = _NUMBER_; //  Mobility degradation factor for well proximity effect 
        DoubleValue scref = _NUMBER_; //  Reference distance to calculate SCA, SCB and SCC
        DoubleValue lkvth0we = _NUMBER_; // Length dependence of kvth0we
        DoubleValue lk2we = _NUMBER_; //  Length dependence of k2we 
        DoubleValue lku0we = _NUMBER_; //  Length dependence of ku0we 
        DoubleValue wkvth0we = _NUMBER_; // Width dependence of kvth0we
        DoubleValue wk2we = _NUMBER_; //  Width dependence of k2we 
        DoubleValue wku0we = _NUMBER_; //  Width dependence of ku0we 
        DoubleValue pkvth0we = _NUMBER_; // Cross-term dependence of kvth0we
        DoubleValue pk2we = _NUMBER_; //  Cross-term dependence of k2we 
        DoubleValue pku0we = _NUMBER_; //  Cross-term dependence of ku0we 
        DoubleValue noia = _NUMBER_; // Flicker noise parameter
        DoubleValue noib = _NUMBER_; // Flicker noise parameter
        DoubleValue noic = _NUMBER_; // Flicker noise parameter
        DoubleValue tnoia = _NUMBER_; // Thermal noise parameter
        DoubleValue tnoib = _NUMBER_; // Thermal noise parameter
        DoubleValue tnoic = _NUMBER_; // Thermal noise parameter
        DoubleValue rnoia = _NUMBER_; // Thermal noise coefficient
        DoubleValue rnoib = _NUMBER_; // Thermal noise coefficient
        DoubleValue rnoic = _NUMBER_; // Thermal noise coefficient
        DoubleValue ntnoi = _NUMBER_; // Thermal noise parameter
        DoubleValue em = _NUMBER_; // Flicker noise parameter
        DoubleValue ef = _NUMBER_; // Flicker noise frequency exponent
        DoubleValue af = _NUMBER_; // Flicker noise exponent
        DoubleValue kf = _NUMBER_; // Flicker noise coefficient
}

